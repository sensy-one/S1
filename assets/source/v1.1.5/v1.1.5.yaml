esphome:
  name: sensy-one
  friendly_name: Sensy One 
  name_add_mac_suffix: True
  project: 
    name: Sensy-One.S1 mmWave Sensor
    version: v1.1.5

external_components:
  - source:
      type: local
      path: components

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_BOOTLOADER_APP_ROLLBACK_ENABLE: n

wifi:
  ap:
    ssid: "I am Sensy!"
    ap_timeout: 1min

captive_portal: 

esp32_improv:
  authorizer: none
  identify_duration: 10s
  wifi_timeout: 1min

logger:
  level: ERROR

api:

ota:
  platform: esphome

web_server:
  port: 80
  log: false

uart:
  id: uart_bus
  tx_pin: GPIO15
  rx_pin: GPIO14
  baud_rate: 256000

globals:
  - id: flip_y_state
    type: bool
    restore_value: true
    initial_value: 'false'

button:
  - platform: template
    name: "RADAR | Flip Y Axis"
    entity_category: config
    icon: "mdi:axis-y-rotate-clockwise"
    on_press:
      then:
        - lambda: |-
            id(flip_y_state) = !id(flip_y_state);
        - if:
            condition:
              lambda: 'return id(flip_y_state);'
            then:
              - switch.template.publish:
                  id: flip_y
                  state: true
            else:
              - switch.template.publish:
                  id: flip_y
                  state: false
                  
  - platform: factory_reset
    name: "ESP32 | Factory Reset"
    entity_category: config
    icon: mdi:factory

  - platform: restart
    name: "ESP32 | Restart Module"
    id: restart_btn
    entity_category: config
    icon: mdi:restart

  - platform: template
    name: "RADAR | Single Target"
    entity_category: config
    icon: mdi:account
    on_press:
      then:
        - lambda: |-
            id(s1_sensor)->set_single_target_tracking();

  - platform: template
    name: "RADAR | Multi Target"
    entity_category: config
    icon: mdi:account-group
    on_press:
      then:
        - lambda: |-
            id(s1_sensor)->set_multi_target_tracking();

  - platform: template
    name: "RADAR | Restart Module"
    icon: mdi:restart
    entity_category: config
    on_press:
      then:
        - lambda: |-
            id(s1_sensor)->restart_module();

  - platform: template
    name: "RADAR | Factory Reset"
    icon: mdi:factory
    entity_category: config
    on_press:
      then:
        - lambda: |-
            id(s1_sensor)->restore_factory_settings();
        - delay: 250ms
        - lambda: |-
            id(s1_sensor)->restart_module();

switch:
  - platform: template
    id: flip_y
    optimistic: true
    internal: true

sensor:
  - platform: s1
    id: s1_sensor
    target1_x:
      name: "Target 1 X"
      id: target1_x
      icon: mdi:alpha-x-box-outline
      unit_of_measurement: "cm"
    target1_y:
      name: "Target 1 Y"
      id: target1_y
      icon: mdi:alpha-y-box-outline
      unit_of_measurement: "cm"
    target1_angle:
      name: "Target 1 Angle"
      id: target1_angle
      icon: mdi:format-text-rotation-angle-up
      unit_of_measurement: "Â°"
    target1_speed:
      name: "Target 1 Speed"
      id: target1_speed
      icon: mdi:speedometer
      unit_of_measurement: "cm/s"
    target1_distance:
      name: "Target 1 Distance"
      id: target1_distance
      icon: mdi:map-marker-distance
      unit_of_measurement: "cm"
    target2_x:
      name: "Target 2 X"
      id: target2_x
      icon: mdi:alpha-x-box-outline
      unit_of_measurement: "cm"
    target2_y:
      name: "Target 2 Y"
      id: target2_y
      icon: mdi:alpha-y-box-outline
      unit_of_measurement: "cm"
    target2_angle:
      name: "Target 2 Angle"
      id: target2_angle
      icon: mdi:format-text-rotation-angle-up
      unit_of_measurement: "Â°"
    target2_speed:
      name: "Target 2 Speed"
      id: target2_speed
      icon: mdi:speedometer
      unit_of_measurement: "cm/s"
    target2_distance:
      name: "Target 2 Distance"
      id: target2_distance
      icon: mdi:map-marker-distance
      unit_of_measurement: "cm"
    target3_x:
      name: "Target 3 X"
      id: target3_x
      icon: mdi:alpha-x-box-outline
      unit_of_measurement: "cm"
    target3_y:
      name: "Target 3 Y"
      id: target3_y
      icon: mdi:alpha-y-box-outline
      unit_of_measurement: "cm"
    target3_angle:
      name: "Target 3 Angle"
      id: target3_angle
      icon: mdi:format-text-rotation-angle-up
      unit_of_measurement: "Â°"
    target3_speed:
      name: "Target 3 Speed"
      id: target3_speed
      icon: mdi:speedometer
      unit_of_measurement: "cm/s"
    target3_distance:
      name: "Target 3 Distance"
      id: target3_distance
      icon: mdi:map-marker-distance
      unit_of_measurement: "cm"
    detection_range: detection_range
    flip_y: flip_y
    exclusion_x_begin: exclusion_x_begin
    exclusion_x_end: exclusion_x_end
    exclusion_y_begin: exclusion_y_begin
    exclusion_y_end: exclusion_y_end

    tracking_mode:
      name: "RADAR | Tracking Mode"
      id: radar_tracking_mode
      entity_category: diagnostic
      icon: mdi:radar

  - platform: template
    name: "All Targets Count"
    icon: mdi:counter
    id: all_targets_count
    unit_of_measurement: ""
    update_interval: 250ms
    lambda: |-
      int count = 0;
      if (id(target1_distance).state > 0) count++;
      if (id(target2_distance).state > 0) count++;
      if (id(target3_distance).state > 0) count++;
      return count;

  - platform: template
    name: "Zone 1 Target Count"
    icon: mdi:counter
    id: zone1_target_count
    unit_of_measurement: ""
    update_interval: 250ms
    lambda: |-
      int count = 0;
      if (id(target1_distance).state > 0 &&
          id(target1_x).state >= id(zone1_x_begin).state &&
          id(target1_x).state <= id(zone1_x_end).state &&
          id(target1_y).state >= id(zone1_y_begin).state &&
          id(target1_y).state <= id(zone1_y_end).state) count++;
      if (id(target2_distance).state > 0 &&
          id(target2_x).state >= id(zone1_x_begin).state &&
          id(target2_x).state <= id(zone1_x_end).state &&
          id(target2_y).state >= id(zone1_y_begin).state &&
          id(target2_y).state <= id(zone1_y_end).state) count++;
      if (id(target3_distance).state > 0 &&
          id(target3_x).state >= id(zone1_x_begin).state &&
          id(target3_x).state <= id(zone1_x_end).state &&
          id(target3_y).state >= id(zone1_y_begin).state &&
          id(target3_y).state <= id(zone1_y_end).state) count++;
      return count;

  - platform: template
    name: "Zone 2 Target Count"
    icon: mdi:counter
    id: zone2_target_count
    unit_of_measurement: ""
    update_interval: 250ms
    lambda: |-
      int count = 0;
      if (id(target1_distance).state > 0 &&
          id(target1_x).state >= id(zone2_x_begin).state &&
          id(target1_x).state <= id(zone2_x_end).state &&
          id(target1_y).state >= id(zone2_y_begin).state &&
          id(target1_y).state <= id(zone2_y_end).state) count++;
      if (id(target2_distance).state > 0 &&
          id(target2_x).state >= id(zone2_x_begin).state &&
          id(target2_x).state <= id(zone2_x_end).state &&
          id(target2_y).state >= id(zone2_y_begin).state &&
          id(target2_y).state <= id(zone2_y_end).state) count++;
      if (id(target3_distance).state > 0 &&
          id(target3_x).state >= id(zone2_x_begin).state &&
          id(target3_x).state <= id(zone2_x_end).state &&
          id(target3_y).state >= id(zone2_y_begin).state &&
          id(target3_y).state <= id(zone2_y_end).state) count++;
      return count;

  - platform: template
    name: "Zone 3 Target Count"
    icon: mdi:counter
    id: zone3_target_count
    unit_of_measurement: ""
    update_interval: 250ms
    lambda: |-
      int count = 0;
      if (id(target1_distance).state > 0 &&
          id(target1_x).state >= id(zone3_x_begin).state &&
          id(target1_x).state <= id(zone3_x_end).state &&
          id(target1_y).state >= id(zone3_y_begin).state &&
          id(target1_y).state <= id(zone3_y_end).state) count++;
      if (id(target2_distance).state > 0 &&
          id(target2_x).state >= id(zone3_x_begin).state &&
          id(target2_x).state <= id(zone3_x_end).state &&
          id(target2_y).state >= id(zone3_y_begin).state &&
          id(target2_y).state <= id(zone3_y_end).state) count++;
      if (id(target3_distance).state > 0 &&
          id(target3_x).state >= id(zone3_x_begin).state &&
          id(target3_x).state <= id(zone3_x_end).state &&
          id(target3_y).state >= id(zone3_y_begin).state &&
          id(target3_y).state <= id(zone3_y_end).state) count++;
      return count;

  - platform: internal_temperature
    name: "ESP32 | Temperature"
    entity_category: diagnostic
    icon: mdi:thermometer

  - platform: wifi_signal
    name: "ESP32 RSSI"
    internal: true
    id: wifi_rssi_raw
    update_interval: 1s

number:
  - platform: template
    name: "Any Presence Delay"
    icon: mdi:timer-outline
    id: presence_delay
    unit_of_measurement: "s"
    min_value: 0
    max_value: 3600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    name: "Any Movement Threshold"
    icon: mdi:motion-sensor
    id: movement_threshold
    unit_of_measurement: "cm/s"
    min_value: 0
    max_value: 5000
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    name: "Detection Range"
    icon: mdi:signal-distance-variant
    id: detection_range
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 600
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: exclusion_x_begin
    name: "Exclusion X Begin"
    icon: mdi:arrow-collapse-left
    unit_of_measurement: "cm"
    min_value: -600
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: exclusion_x_end
    name: "Exclusion X End"
    icon: mdi:arrow-collapse-right
    unit_of_measurement: "cm"
    min_value: -600
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: exclusion_y_begin
    name: "Exclusion Y Begin"
    icon: mdi:arrow-collapse-up
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: exclusion_y_end
    name: "Exclusion Y End"
    icon: mdi:arrow-collapse-down
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone1_x_begin
    name: "Zone 1 X Begin"
    icon: mdi:arrow-collapse-left
    unit_of_measurement: "cm"
    min_value: -600
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone1_x_end
    name: "Zone 1 X End"
    icon: mdi:arrow-collapse-right
    unit_of_measurement: "cm"
    min_value: -600
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone1_y_begin
    name: "Zone 1 Y Begin"
    icon: mdi:arrow-collapse-up
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true

  - platform: template
    id: zone1_y_end
    name: "Zone 1 Y End"
    icon: mdi:arrow-collapse-down
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone1_movement_threshold
    name: "Zone 1 Movement Threshold"
    icon: mdi:motion-sensor
    unit_of_measurement: "cm/s"
    min_value: 0
    max_value: 5000
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone1_presence_delay
    name: "Zone 1 Presence Delay"
    icon: mdi:timer-outline
    unit_of_measurement: "s"
    min_value: 0
    max_value: 3600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone2_x_begin
    name: "Zone 2 X Begin"
    icon: mdi:arrow-collapse-left
    unit_of_measurement: "cm"
    min_value: -600
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone2_x_end
    name: "Zone 2 X End"
    icon: mdi:arrow-collapse-right
    unit_of_measurement: "cm"
    min_value: -600
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone2_y_begin
    name: "Zone 2 Y Begin"
    icon: mdi:arrow-collapse-up
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone2_y_end
    name: "Zone 2 Y End"
    icon: mdi:arrow-collapse-down
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone2_movement_threshold
    name: "Zone 2 Movement Threshold"
    icon: mdi:motion-sensor
    unit_of_measurement: "cm/s"
    min_value: 0
    max_value: 5000
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone2_presence_delay
    name: "Zone 2 Presence Delay"
    icon: mdi:timer-outline
    unit_of_measurement: "s"
    min_value: 0
    max_value: 3600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone3_x_begin
    name: "Zone 3 X Begin"
    icon: mdi:arrow-collapse-left
    unit_of_measurement: "cm"
    min_value: -600
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone3_x_end
    name: "Zone 3 X End"
    icon: mdi:arrow-collapse-right
    unit_of_measurement: "cm"
    min_value: -600
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone3_y_begin
    name: "Zone 3 Y Begin"
    icon: mdi:arrow-collapse-up
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone3_y_end
    name: "Zone 3 Y End"
    icon: mdi:arrow-collapse-down
    unit_of_measurement: "cm"
    min_value: 0
    max_value: 600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone3_movement_threshold
    name: "Zone 3 Movement Threshold"
    icon: mdi:motion-sensor
    unit_of_measurement: "cm/s"
    min_value: 0
    max_value: 5000
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

  - platform: template
    id: zone3_presence_delay
    name: "Zone 3 Presence Delay"
    icon: mdi:timer-outline
    unit_of_measurement: "s"
    min_value: 0
    max_value: 3600
    step: 1
    initial_value: 0
    optimistic: true
    restore_value: true
    mode: box

binary_sensor:
  - platform: status
    name: "ESP32 | Status"
    entity_category: diagnostic

  - platform: template
    name: "Any Presence"
    icon: mdi:home-account
    device_class: presence
    lambda: |-
      static unsigned long last_off = 0;
      bool present = id(target1_distance).state > 0 ||
                     id(target2_distance).state > 0 ||
                     id(target3_distance).state > 0;
      unsigned long now = millis();
      if (present) {
        last_off = now;
        return true;
      }
      return (now - last_off) < (unsigned long)(id(presence_delay).state * 1000.0);

  - platform: template
    name: "Any Movement"
    icon: mdi:motion-sensor
    device_class: motion
    lambda: |-
      float thresh = id(movement_threshold).state;
      return (std::abs(id(target1_speed).state) > thresh) ||
             (std::abs(id(target2_speed).state) > thresh) ||
             (std::abs(id(target3_speed).state) > thresh);

  - platform: template
    name: "Zone 1 Presence"
    icon: mdi:home-account
    device_class: presence
    lambda: |-
      static unsigned long last_off_1 = 0;
      unsigned long now = millis();
      bool pres1 = (id(target1_distance).state > 0 &&
                   id(target1_x).state >= id(zone1_x_begin).state &&
                   id(target1_x).state <= id(zone1_x_end).state &&
                   id(target1_y).state >= id(zone1_y_begin).state &&
                   id(target1_y).state <= id(zone1_y_end).state)
                || (id(target2_distance).state > 0 &&
                   id(target2_x).state >= id(zone1_x_begin).state &&
                   id(target2_x).state <= id(zone1_x_end).state &&
                   id(target2_y).state >= id(zone1_y_begin).state &&
                   id(target2_y).state <= id(zone1_y_end).state)
                || (id(target3_distance).state > 0 &&
                   id(target3_x).state >= id(zone1_x_begin).state &&
                   id(target3_x).state <= id(zone1_x_end).state &&
                   id(target3_y).state >= id(zone1_y_begin).state &&
                   id(target3_y).state <= id(zone1_y_end).state);
      if (pres1) {
        last_off_1 = now;
        return true;
      }
      return (now - last_off_1) < (unsigned long)(id(zone1_presence_delay).state * 1000.0);

  - platform: template
    name: "Zone 1 Movement"
    icon: mdi:motion-sensor
    device_class: motion
    lambda: |-
      float thresh1 = id(zone1_movement_threshold).state;
      bool mov1 = (std::abs(id(target1_speed).state) > thresh1 &&
                   id(target1_distance).state > 0 &&
                   id(target1_x).state >= id(zone1_x_begin).state &&
                   id(target1_x).state <= id(zone1_x_end).state &&
                   id(target1_y).state >= id(zone1_y_begin).state &&
                   id(target1_y).state <= id(zone1_y_end).state)
               || (std::abs(id(target2_speed).state) > thresh1 &&
                   id(target2_distance).state > 0 &&
                   id(target2_x).state >= id(zone1_x_begin).state &&
                   id(target2_x).state <= id(zone1_x_end).state &&
                   id(target2_y).state >= id(zone1_y_begin).state &&
                   id(target2_y).state <= id(zone1_y_end).state)
               || (std::abs(id(target3_speed).state) > thresh1 &&
                   id(target3_distance).state > 0 &&
                   id(target3_x).state >= id(zone1_x_begin).state &&
                   id(target3_x).state <= id(zone1_x_end).state &&
                   id(target3_y).state >= id(zone1_y_begin).state &&
                   id(target3_y).state <= id(zone1_y_end).state);
      return mov1;

  - platform: template
    name: "Zone 2 Presence"
    icon: mdi:home-account
    device_class: presence
    lambda: |-
      static unsigned long last_off_2 = 0;
      unsigned long now = millis();
      bool pres2 = (id(target1_distance).state > 0 &&
                   id(target1_x).state >= id(zone2_x_begin).state &&
                   id(target1_x).state <= id(zone2_x_end).state &&
                   id(target1_y).state >= id(zone2_y_begin).state &&
                   id(target1_y).state <= id(zone2_y_end).state)
                || (id(target2_distance).state > 0 &&
                   id(target2_x).state >= id(zone2_x_begin).state &&
                   id(target2_x).state <= id(zone2_x_end).state &&
                   id(target2_y).state >= id(zone2_y_begin).state &&
                   id(target2_y).state <= id(zone2_y_end).state)
                || (id(target3_distance).state > 0 &&
                   id(target3_x).state >= id(zone2_x_begin).state &&
                   id(target3_x).state <= id(zone2_x_end).state &&
                   id(target3_y).state >= id(zone2_y_begin).state &&
                   id(target3_y).state <= id(zone2_y_end).state);
      if (pres2) {
        last_off_2 = now;
        return true;
      }
      return (now - last_off_2) < (unsigned long)(id(zone2_presence_delay).state * 1000.0);

  - platform: template
    name: "Zone 2 Movement"
    icon: mdi:motion-sensor
    device_class: motion
    lambda: |-
      float thresh2 = id(zone2_movement_threshold).state;
      bool mov2 = (std::abs(id(target1_speed).state) > thresh2 &&
                   id(target1_distance).state > 0 &&
                   id(target1_x).state >= id(zone2_x_begin).state &&
                   id(target1_x).state <= id(zone2_x_end).state &&
                   id(target1_y).state >= id(zone2_y_begin).state &&
                   id(target1_y).state <= id(zone2_y_end).state)
               || (std::abs(id(target2_speed).state) > thresh2 &&
                   id(target2_distance).state > 0 &&
                   id(target2_x).state >= id(zone2_x_begin).state &&
                   id(target2_x).state <= id(zone2_x_end).state &&
                   id(target2_y).state >= id(zone2_y_begin).state &&
                   id(target2_y).state <= id(zone2_y_end).state)
               || (std::abs(id(target3_speed).state) > thresh2 &&
                   id(target3_distance).state > 0 &&
                   id(target3_x).state >= id(zone2_x_begin).state &&
                   id(target3_x).state <= id(zone2_x_end).state &&
                   id(target3_y).state >= id(zone2_y_begin).state &&
                   id(target3_y).state <= id(zone2_y_end).state);
      return mov2;

  - platform: template
    name: "Zone 3 Presence"
    icon: mdi:home-account
    device_class: presence
    lambda: |-
      static unsigned long last_off_3 = 0;
      unsigned long now = millis();
      bool pres3 = (id(target1_distance).state > 0 &&
                   id(target1_x).state >= id(zone3_x_begin).state &&
                   id(target1_x).state <= id(zone3_x_end).state &&
                   id(target1_y).state >= id(zone3_y_begin).state &&
                   id(target1_y).state <= id(zone3_y_end).state)
                || (id(target2_distance).state > 0 &&
                   id(target2_x).state >= id(zone3_x_begin).state &&
                   id(target2_x).state <= id(zone3_x_end).state &&
                   id(target2_y).state >= id(zone3_y_begin).state &&
                   id(target2_y).state <= id(zone3_y_end).state)
                || (id(target3_distance).state > 0 &&
                   id(target3_x).state >= id(zone3_x_begin).state &&
                   id(target3_x).state <= id(zone3_x_end).state &&
                   id(target3_y).state >= id(zone3_y_begin).state &&
                   id(target3_y).state <= id(zone3_y_end).state);
      if (pres3) {
        last_off_3 = now;
        return true;
      }
      return (now - last_off_3) < (unsigned long)(id(zone3_presence_delay).state * 1000.0);

  - platform: template
    name: "Zone 3 Movement"
    icon: mdi:motion-sensor
    device_class: motion
    lambda: |-
      float thresh3 = id(zone3_movement_threshold).state;
      bool mov3 = (std::abs(id(target1_speed).state) > thresh3 &&
                   id(target1_distance).state > 0 &&
                   id(target1_x).state >= id(zone3_x_begin).state &&
                   id(target1_x).state <= id(zone3_x_end).state &&
                   id(target1_y).state >= id(zone3_y_begin).state &&
                   id(target1_y).state <= id(zone3_y_end).state)
               || (std::abs(id(target2_speed).state) > thresh3 &&
                   id(target2_distance).state > 0 &&
                   id(target2_x).state >= id(zone3_x_begin).state &&
                   id(target2_x).state <= id(zone3_x_end).state &&
                   id(target2_y).state >= id(zone3_y_begin).state &&
                   id(target2_y).state <= id(zone3_y_end).state)
               || (std::abs(id(target3_speed).state) > thresh3 &&
                   id(target3_distance).state > 0 &&
                   id(target3_x).state >= id(zone3_x_begin).state &&
                   id(target3_x).state <= id(zone3_x_end).state &&
                   id(target3_y).state >= id(zone3_y_begin).state &&
                   id(target3_y).state <= id(zone3_y_end).state);
      return mov3;

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "ESP32 | IP"
      entity_category: diagnostic
      icon: mdi:ip-network

  - platform: wifi_info
    ssid:
      name: "ESP32 | SSID"
      entity_category: diagnostic
      icon: mdi:wifi-settings

  - platform: template
    name: "ESP32 | WiFi Strength"
    entity_category: diagnostic
    icon: "mdi:signal-cellular-3"
    update_interval: 1s
    lambda: |-
      int rssi = int(id(wifi_rssi_raw).state);
      if (rssi < -90)      return {"Very Weak"};
      else if (rssi < -80) return {"Weak"};
      else if (rssi < -70) return {"Moderate"};
      else if (rssi < -60) return {"Strong"};
      else                  return {"Very Strong"};